<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-implementation-suite.xml" />
	<munit:test name="get-customers-details-test" doc:id="5327a2db-08dc-429d-9973-458f5d75c165" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get-order_id-from-Salesforce" doc:id="fe670084-8823-490f-81ba-3035d4c32929" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d2a8869a-0182-48ea-9c4b-6b04a7ad547a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcustomersdetailstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomersdetailstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="order_id" value="#[output application/java --- readUrl('classpath://getcustomersdetailstest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b2beb40f-22a3-4cc8-91f7-ed4bc95ee02b" >
				<munit:payload value="#[readUrl('classpath://getcustomersdetailstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcustomersdetailstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomersdetailstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-customers-details" doc:id="18623664-3a17-4d9b-9040-f3077a67dc28" name="get-customers-details"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5d287640-4994-47b6-bc79-1900c3ef46b4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcustomersdetailstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get-items-details-test" doc:id="f6d2859c-e211-45a3-8ce1-d6fde68ad41b" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get-order_id-from-Salesforce" doc:id="bee81226-8628-4324-9fd6-e989c4a35816" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0042a626-2470-4107-8128-cd6d619fc1a5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getitemsdetailstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getitemsdetailstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="order_item_ID" value="#[output application/java --- readUrl('classpath://getitemsdetailstest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="de5ef7d1-6f48-4113-b016-2f4b9a3e570b" >
				<munit:payload value="#[readUrl('classpath://getitemsdetailstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getitemsdetailstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getitemsdetailstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-items-details" doc:id="f4d1a26e-8561-4c81-97a6-ba0915ad03b4" name="get-items-details"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="16299730-a3fd-48cf-b570-57f2fe4c800f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getitemsdetailstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get-orders-details-test" doc:id="e7a7757e-b787-4b17-9ea3-193f417526c9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get-poNumber-from-Salesforce" doc:id="ce3e9547-be76-4751-aa6e-957aa9576aea" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0f570cdd-0788-4285-b998-6aacbd4804d7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getordersdetailstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getordersdetailstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="poNumber" value="#[output application/java --- readUrl('classpath://getordersdetailstest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="2e9a609c-5d4b-49a1-a01d-5cd325fcd40e" >
				<munit:payload value="#[readUrl('classpath://getordersdetailstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getordersdetailstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getordersdetailstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-orders-details" doc:id="f016815e-6fa8-4163-a41d-f9b6a29c40db" name="get-orders-details"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a67e2ebf-1507-4928-8226-a37f647814b3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getordersdetailstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
